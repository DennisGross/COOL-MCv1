#python cool_mc.py --task training --max_steps 40 --prism_file_path firewire_abst.v1.prism --project_name exp24_firewire_abst --constant_definitions "delay=3" --architecture dqn --num_episodes 10000 --eval_interval 50 --prop 'R{"rounds"}min=? [ F "done" ]' --prop_type "min_prop"
#python cool_mc.py --task storm_model_checking --max_steps 20 --prism_file_path firewire.false.v2.prism --project_name exp25_firewire.false --constant_definitions "delay=3,deadline=200" --architecture random --num_episodes 10000 --eval_interval 50 --prop 'R{"time"}min=? [ F "done" ]' --prop_type "min_prop"
#python cool_mc.py --task training --max_steps 20 --prism_file_path wlan.0.v1.prism --project_name exp26_wlan.0.v1 --constant_definitions "COL=0" --architecture random --num_episodes 10000 --eval_interval 50 --prop 'Pmax=? [ F col=COL ]' --prop_type "min_prop"
#python cool_mc.py --task training --max_steps 200 --prism_file_path resource-gathering.v2.pm --project_name exp27_resource-gathering --constant_definitions "B=200,GOLD_TO_COLLECT=15,GEM_TO_COLLECT=15" --reward_flag true --architecture dqn --num_episodes 100000 --eval_interval 1 --prop 'R{"rew_gold"}max=? [C<=B]' --prop_type "max_prop"
#python cool_mc.py --task rl_model_checking --max_steps 100 --prism_file_path csma.2-2.v1.prism --project_name exp28_csma --constant_definitions "" --reward_training true --architecture dqn --num_episodes 10000 --eval_interval 100 --prop 'R{"time"}min=? [ F "all_delivered" ]' --prop_type "min_prop"
#python cool_mc.py --task rl_model_checking --max_steps 20 --prism_file_path frozen_lake_4x4.prism --project_name exp01_FL_4x4 --constant_definitions "slippery=[0.04;0.2;1]" --architecture dqn --num_episodes 10000 --eval_interval 250 --prop 'Pmax=? [F "water"]' --prop_type "min_prop"
#python cool_mc.py --task rl_model_checking --max_steps 100 --prism_file_path consensus.2.v1.prism --project_name exp29_consensus --constant_definitions "K=2" --architecture dqn --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#python cool_mc.py --task storm_model_checking --max_steps 100 --prism_file_path consensus.2.v1.prism --project_name exp29_consensus2 --constant_definitions "K=900" --architecture random --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#GET KILLED: python cool_mc.py --task storm_model_checking --max_steps 100 --prism_file_path consensus.10.v1.prism --project_name exp30_consensus_v10 --constant_definitions "K=2" --architecture random --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#GET KILLED: python cool_mc.py --task storm_model_checking --max_steps 100 --prism_file_path consensus.8.v1.prism --project_name exp30_consensus_v8 --constant_definitions "K=2" --architecture random --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#python cool_mc.py --task storm_model_checking --max_steps 100 --prism_file_path consensus.6.v1.prism --project_name exp30_consensus_v6 --constant_definitions "K=2" --architecture random --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#python cool_mc.py --task rl_model_checking --max_steps 700 --prism_file_path consensus.8.v1.prism --reward_training true  --project_name exp30_consensus_v8 --constant_definitions "K=2" --architecture dqn --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
#python cool_mc.py --task rl_model_checking --max_steps 700 --prism_file_path consensus.8.v1.prism --reward_training true  --project_name exp31_consensus_v8 --constant_definitions "K=2" --architecture random --num_episodes 10000 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
# Random Policy
python cool_mc.py --task rl_model_checking --max_steps 100 --prism_file_path consensus.2.v1.prism --project_name exp29_consensus_random --constant_definitions "K=2" --architecture random --num_episodes 101 --eval_interval 100 --prop 'R{"steps"}min=? [ F "finished" ]' --prop_type "min_prop"
